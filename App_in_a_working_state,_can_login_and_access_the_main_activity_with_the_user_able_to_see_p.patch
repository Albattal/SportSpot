Subject: [PATCH] App in a working state, can login and access the main activity with the user able to see posts. Still need to work on the the activity view. Various settings need to be implemented.
---
Index: app/src/main/AndroidManifest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
--- a/app/src/main/AndroidManifest.xml	(revision d8af1b14a154a478b0a009e6c3a61c44178a03fc)
+++ b/app/src/main/AndroidManifest.xml	(date 1700894472616)
@@ -2,6 +2,11 @@
 <manifest xmlns:android="http://schemas.android.com/apk/res/android"
     xmlns:tools="http://schemas.android.com/tools">
 
+    <uses-permission android:name="android.permission.INTERNET"
+        ></uses-permission>
+    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE"/>
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE"/>
+
     <application
         android:allowBackup="true"
         android:dataExtractionRules="@xml/data_extraction_rules"
@@ -10,11 +15,26 @@
         android:supportsRtl="true"
         android:theme="@style/Theme.SportSpot"
         tools:targetApi="31">
+        <activity
+            android:name=".MainActivity"
+            android:exported="true" />
+        <activity
+            android:name=".PostActivity"
+            android:exported="true" />
         <activity
             android:name=".RegistrationActivity"
-            android:exported="false" />
+            android:exported="true" />
         <activity
-            android:name=".MainActivity"
+            android:name=".Posts"
+            android:exported="true" />
+        <activity
+            android:name=".Users"
+            android:exported="true" />
+        <activity
+            android:name=".LoginActivity"
+            android:exported="true" />
+        <activity
+            android:name=".WelcomePageActivity"
             android:exported="true">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
@@ -22,6 +42,9 @@
                 <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
+
+        <activity android:name="com.theartofdev.edmodo.cropper.CropImageActivity"
+            android:theme="@style/Base.Theme.AppCompat" />
     </application>
 
 </manifest>
\ No newline at end of file
Index: app/src/main/java/com/example/sportspot/RegistrationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/sportspot/RegistrationActivity.java b/app/src/main/java/com/example/sportspot/RegistrationActivity.java
--- a/app/src/main/java/com/example/sportspot/RegistrationActivity.java	(revision d8af1b14a154a478b0a009e6c3a61c44178a03fc)
+++ b/app/src/main/java/com/example/sportspot/RegistrationActivity.java	(date 1700897631545)
@@ -1,24 +1,46 @@
 package com.example.sportspot;
 
+import androidx.annotation.Nullable;
 import androidx.appcompat.app.AppCompatActivity;
+
+import android.content.Intent;
+import android.graphics.Bitmap;
+import android.graphics.drawable.BitmapDrawable;
+import android.net.Uri;
 import android.os.Bundle;
 import android.view.View;
 import android.widget.EditText;
 import android.widget.Button;
 import android.widget.Toast;
 import com.google.firebase.auth.FirebaseAuth;
-import com.google.firebase.auth.AuthResult;
-import androidx.annotation.NonNull;
-import com.google.android.gms.tasks.OnCompleteListener;
-import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.storage.FirebaseStorage;
+import com.google.firebase.storage.StorageReference;
+
+import java.io.ByteArrayOutputStream;
+
+import de.hdodenhof.circleimageview.CircleImageView;
 
 public class RegistrationActivity extends AppCompatActivity {
 
     // Declare Firebase Auth and UI elements
     private FirebaseAuth mAuth;
+
+    private FirebaseDatabase mData;
+
+    private DatabaseReference mDatabase;
+
     private EditText emailEditText;
     private EditText passwordEditText;
+    private EditText usernameEditText;
+    private EditText fnameEditText;
+    private EditText lnameEditText;
     private Button signUpButton;
+    private CircleImageView profileImageView;
+
+    final static int Gallery_Pick = 1;
 
     @Override
     protected void onCreate(Bundle savedInstanceState) {
@@ -29,10 +51,15 @@
         mAuth = FirebaseAuth.getInstance();
 
         // Reference UI elements
+        mDatabase = FirebaseDatabase.getInstance().getReference("Users");
+
         emailEditText = findViewById(R.id.emailEditText);
         passwordEditText = findViewById(R.id.passwordEditText);
+        usernameEditText = findViewById(R.id.usernameEditText);
+        fnameEditText = findViewById(R.id.fnameEditText);
+        lnameEditText = findViewById(R.id.lnameEditText);
         signUpButton = findViewById(R.id.signUpButton);
-
+        profileImageView = findViewById(R.id.setup_profile_image);
         // Set OnClickListener for the Sign Up button
         signUpButton.setOnClickListener(new View.OnClickListener() {
             @Override
@@ -40,29 +67,112 @@
                 registerUser();
             }
         });
+
+        // Set OnClickListener for the profile image view
+        profileImageView.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                // Open gallery to select an image
+                Intent galleryIntent = new Intent();
+                galleryIntent.setAction(Intent.ACTION_GET_CONTENT);
+                galleryIntent.setType("image/*");
+                startActivityForResult(galleryIntent, Gallery_Pick);
+            }
+        });
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+        if (requestCode == Gallery_Pick && resultCode == RESULT_OK && data != null) {
+            Uri imageUri = data.getData();
+            // Set the selected image to the profile image view
+            profileImageView.setImageURI(imageUri);
+        }
     }
 
     private void registerUser() {
         String email = emailEditText.getText().toString().trim();
         String password = passwordEditText.getText().toString().trim();
+        String username = usernameEditText.getText().toString().trim();
+        String fname = fnameEditText.getText().toString().trim();
+        String lname = lnameEditText.getText().toString().trim();
 
         // Basic validation
-        if (email.isEmpty() || password.isEmpty()) {
-            Toast.makeText(RegistrationActivity.this, "Email and Password required", Toast.LENGTH_SHORT).show();
+        if (email.isEmpty() || password.isEmpty() || fname.isEmpty() || lname.isEmpty() || username.isEmpty() || profileImageView.getDrawable() == null) {
+            Toast.makeText(RegistrationActivity.this, "Please fill out all fields", Toast.LENGTH_SHORT).show();
             return;
         }
-
         // Firebase registration
         mAuth.createUserWithEmailAndPassword(email, password)
-                .addOnCompleteListener(new OnCompleteListener<AuthResult>() {
-                    @Override
-                    public void onComplete(@NonNull Task<AuthResult> task) {
-                        if (task.isSuccessful()) {
-                            Toast.makeText(RegistrationActivity.this, "Registration Successful", Toast.LENGTH_SHORT).show();
+                .addOnCompleteListener(this, task -> {
+                    if (task.isSuccessful()) {
+                        Toast.makeText(RegistrationActivity.this, "Registration Successful", Toast.LENGTH_SHORT).show();
+
+                        FirebaseUser currentUser = mAuth.getCurrentUser();
+                        if (currentUser != null) {
+                            // Save user information to Realtime Database
+                            saveUserToDatabase(currentUser.getUid(), fname, lname, username, email);
+
+                            // Save profile image to Firebase Storage
+                            saveProfileImageToStorage(currentUser.getUid());
+
+                            Intent intent = new Intent(RegistrationActivity.this, LoginActivity.class);
+                            intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
+                            startActivity(intent);
+                            finish();
                         } else {
-                            Toast.makeText(RegistrationActivity.this, "Registration Failed", Toast.LENGTH_SHORT).show();
-                        }
-                    }
-                });
+                            // Handle the case where currentUser is null
+                            Toast.makeText(RegistrationActivity.this, "User information is missing", Toast.LENGTH_SHORT).show();
+                        }
+                    } else {
+                        Toast.makeText(RegistrationActivity.this, "Registration failed", Toast.LENGTH_SHORT).show();
+                        System.out.println(task.getException());
+                    }
+                });
+        }
+
+    private void saveUserToDatabase(String uid, String fname, String lname, String username, String email) {
+        Users user = new Users(uid, fname, lname, username, email);
+        mDatabase.child(uid).setValue(user);
+    }
+
+    private void saveProfileImageToStorage(String uid) {
+        // Get the profile image drawable
+        BitmapDrawable drawable = (BitmapDrawable) profileImageView.getDrawable();
+        if (drawable != null) {
+            // Convert drawable to Bitmap
+            Bitmap bitmap = drawable.getBitmap();
+            // Convert Bitmap to byte array
+            ByteArrayOutputStream baos = new ByteArrayOutputStream();
+            bitmap.compress(Bitmap.CompressFormat.JPEG, 100, baos);
+            byte[] imageData = baos.toByteArray();
+
+            // Save the byte array to Firebase Storage
+            StorageReference filePath = FirebaseStorage.getInstance().getReference().child("ProfileImages").child(uid + ".jpg");
+            filePath.putBytes(imageData)
+                    .addOnCompleteListener(task -> {
+                        if (task.isSuccessful()) {
+                            // Image uploaded successfully, get the download URL
+                            filePath.getDownloadUrl().addOnSuccessListener(uri -> {
+                                // Save the download URL to the Realtime Database
+                                saveImageUrlToDatabase(uid, uri.toString());
+
+                                // After saving the image and URL, you can proceed to other activities or show a success message
+                                Intent intent = new Intent(RegistrationActivity.this, LoginActivity.class);
+                                intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
+                                startActivity(intent);
+                                finish();
+                            });
+                        } else {
+                            // Handle image upload failure
+                            Toast.makeText(RegistrationActivity.this, "Image upload failed", Toast.LENGTH_SHORT).show();
+                        }
+                    });
+        }
+        }
+
+    private void saveImageUrlToDatabase(String uid, String imageUrl) {
+        mDatabase.child(uid).child("profileImage").setValue(imageUrl);
     }
 }
Index: app/src/main/res/values/strings.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/values/strings.xml b/app/src/main/res/values/strings.xml
--- a/app/src/main/res/values/strings.xml	(revision d8af1b14a154a478b0a009e6c3a61c44178a03fc)
+++ b/app/src/main/res/values/strings.xml	(date 1700882578849)
@@ -1,3 +1,5 @@
 <resources>
     <string name="app_name">SportSpot</string>
+    <string name="drawer_open">Drawer Open</string>
+    <string name="drawer_close">Drawer Close</string>
 </resources>
\ No newline at end of file
Index: app/src/main/java/com/example/sportspot/SetupActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/sportspot/SetupActivity.java b/app/src/main/java/com/example/sportspot/SetupActivity.java
new file mode 100644
--- /dev/null	(date 1700900717420)
+++ b/app/src/main/java/com/example/sportspot/SetupActivity.java	(date 1700900717420)
@@ -0,0 +1,252 @@
+package com.example.sportspot;
+
+import androidx.annotation.NonNull;
+import androidx.annotation.Nullable;
+import androidx.appcompat.app.AppCompatActivity;
+
+import android.app.ProgressDialog;
+import android.content.Intent;
+import android.net.Uri;
+import android.os.Bundle;
+import android.text.TextUtils;
+import android.view.View;
+import android.widget.Button;
+import android.widget.EditText;
+import android.widget.Toast;
+
+import com.google.android.gms.tasks.OnCompleteListener;
+import com.google.android.gms.tasks.OnSuccessListener;
+import com.google.android.gms.tasks.Task;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+import com.google.firebase.storage.FirebaseStorage;
+import com.google.firebase.storage.StorageReference;
+import com.google.firebase.storage.UploadTask;
+import com.squareup.picasso.Picasso;
+import com.theartofdev.edmodo.cropper.CropImage;
+import com.theartofdev.edmodo.cropper.CropImageView;
+
+import java.util.HashMap;
+
+import de.hdodenhof.circleimageview.CircleImageView;
+
+public class SetupActivity extends AppCompatActivity {
+    private EditText UserName, FullName, CountryName;
+    private Button SaveInformationbuttion;
+    private CircleImageView ProfileImage;
+    private ProgressDialog loadingBar;
+
+    private FirebaseAuth mAuth;
+    private DatabaseReference UsersRef;
+    private StorageReference UserProfileImageRef;
+
+    String currentUserID;
+    final static int Gallery_Pick = 1;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_registration);
+
+        mAuth = FirebaseAuth.getInstance();
+        currentUserID = mAuth.getCurrentUser().getUid();
+        UsersRef = FirebaseDatabase.getInstance().getReference().child("Users").child(currentUserID);
+        UserProfileImageRef = FirebaseStorage.getInstance().getReference().child("Profile Images");
+
+        UserName = (EditText) findViewById(R.id.usernameEditText);
+        FullName = (EditText) findViewById(R.id.fnameEditText); //edit this later to include last name
+        SaveInformationbuttion = (Button) findViewById(R.id.signUpButton);
+        ProfileImage = (CircleImageView) findViewById(R.id.setup_profile_image);
+        loadingBar = new ProgressDialog(this);
+
+        SaveInformationbuttion.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view)
+            {
+                SaveAccountSetupInformation();
+            }
+        });
+
+        ProfileImage.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view)
+            {
+                Intent galleryIntent = new Intent();
+                galleryIntent.setAction(Intent.ACTION_GET_CONTENT);
+                galleryIntent.setType("image/*");
+                startActivityForResult(galleryIntent, Gallery_Pick);
+            }
+        });
+
+        UsersRef.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(DataSnapshot dataSnapshot)
+            {
+                if(dataSnapshot.exists())
+                {
+                    if (dataSnapshot.hasChild("profileimage"))
+                    {
+                        String image = dataSnapshot.child("profileimage").getValue().toString();
+                        Picasso.get().load(image).placeholder(R.drawable.profile_image).into(ProfileImage);
+                    }
+                    else
+                    {
+                        Toast.makeText(SetupActivity.this, "Please select profile image first.", Toast.LENGTH_SHORT).show();
+                    }
+                }
+            }
+
+            @Override
+            public void onCancelled(DatabaseError databaseError) {
+
+            }
+        });
+
+
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, @Nullable Intent data) {
+        super.onActivityResult(requestCode, resultCode, data);
+
+        if(requestCode==Gallery_Pick && resultCode==RESULT_OK && data!=null)
+        {
+            Uri ImageUri = data.getData();
+
+            CropImage.activity()
+                    .setGuidelines(CropImageView.Guidelines.ON)
+                    .setAspectRatio(1, 1)
+                    .start(this);
+        }
+
+        if(requestCode==CropImage.CROP_IMAGE_ACTIVITY_REQUEST_CODE)
+        {
+            CropImage.ActivityResult result = CropImage.getActivityResult(data);
+
+            if(resultCode == RESULT_OK)
+            {
+                loadingBar.setTitle("Profile Image");
+                loadingBar.setMessage("Please wait, while we updating your profile image...");
+                loadingBar.show();
+                loadingBar.setCanceledOnTouchOutside(true);
+
+                Uri resultUri = result.getUri();
+
+                StorageReference filePath = UserProfileImageRef.child(currentUserID + ".jpg");
+
+                filePath.putFile(resultUri).addOnCompleteListener(new OnCompleteListener<UploadTask.TaskSnapshot>() {
+                    @Override
+                    public void onComplete(@NonNull final Task<UploadTask.TaskSnapshot> task)
+                    {
+                        if(task.isSuccessful())
+                        {
+                            Toast.makeText(SetupActivity.this, "Profile Image stored successfully to Firebase storage...", Toast.LENGTH_SHORT).show();
+
+                            // Get the StorageReference for the uploaded file
+                            StorageReference storageRef = FirebaseStorage.getInstance().getReference().child(currentUserID + ".jpg");
+
+                            // Get the download URL
+                            storageRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
+                                @Override
+                                public void onSuccess(Uri uri) {
+                                    // Get the download URL as a string
+                                    final String downloadUrl = uri.toString();
+
+                                    UsersRef.child("profileimage").setValue(downloadUrl)
+                                            .addOnCompleteListener(new OnCompleteListener<Void>() {
+                                                @Override
+                                                public void onComplete(@NonNull Task<Void> task)
+                                                {
+                                                    if(task.isSuccessful())
+                                                    {
+                                                        Intent selfIntent = new Intent(SetupActivity.this, SetupActivity.class);
+                                                        startActivity(selfIntent);
+
+                                                        Toast.makeText(SetupActivity.this, "Profile Image stored to Firebase Database Successfully...", Toast.LENGTH_SHORT).show();
+                                                        loadingBar.dismiss();
+                                                    }
+                                                    else
+                                                    {
+                                                        String message = task.getException().getMessage();
+                                                        Toast.makeText(SetupActivity.this, "Error Occured: " + message, Toast.LENGTH_SHORT).show();
+                                                        loadingBar.dismiss();
+                                                    }
+                                                }
+                                            });
+                                }
+                            });
+                        }
+                    }
+                });
+
+            }
+            else
+            {
+                Toast.makeText(this, "Error Occured: Image can not be cropped. Try Again.", Toast.LENGTH_SHORT).show();
+                loadingBar.dismiss();
+            }
+        }
+
+    }
+
+    private void SaveAccountSetupInformation() {
+        String username = UserName.getText().toString();
+        String fullname = FullName.getText().toString();
+        String country = CountryName.getText().toString();
+
+        if(TextUtils.isEmpty(username))
+        {
+            Toast.makeText(this, "Please write your username...", Toast.LENGTH_SHORT).show();
+        }
+        if(TextUtils.isEmpty(fullname))
+        {
+            Toast.makeText(this, "Please write your full name...", Toast.LENGTH_SHORT).show();
+        }
+        if(TextUtils.isEmpty(country))
+        {
+            Toast.makeText(this, "Please write your country...", Toast.LENGTH_SHORT).show();
+        }
+        else
+        {
+            loadingBar.setTitle("Saving Information");
+            loadingBar.setMessage("Please wait, while we are creating your new Account...");
+            loadingBar.show();
+            loadingBar.setCanceledOnTouchOutside(true);
+            HashMap userMap = new HashMap();
+            userMap.put("username", username);
+            userMap.put("fullname", fullname);
+            userMap.put("country", country);
+            userMap.put("status", "Using SportSpot");
+            userMap.put("gender", "none");
+            userMap.put("dob", "none");
+            UsersRef.updateChildren(userMap).addOnCompleteListener(new OnCompleteListener() {
+                @Override
+                public void onComplete(@NonNull Task task) {
+                    if(task.isSuccessful())
+                    {
+                        SendUserToMainActivity();
+                        Toast.makeText(SetupActivity.this, "your Account is created Successfully.", Toast.LENGTH_LONG).show();
+                        loadingBar.dismiss();
+                    }
+                    else
+                    {
+                        String message =  task.getException().getMessage();
+                        Toast.makeText(SetupActivity.this, "Error Occurred: " + message, Toast.LENGTH_SHORT).show();
+                        loadingBar.dismiss();
+                    }
+                }
+            });
+        }
+    }
+
+    private void SendUserToMainActivity() {
+        Intent mainIntent = new Intent(SetupActivity.this, MainActivity.class);
+        mainIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
+        startActivity(mainIntent);
+        finish();
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/activity_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_main.xml b/app/src/main/res/layout/activity_main.xml
--- a/app/src/main/res/layout/activity_main.xml	(revision d8af1b14a154a478b0a009e6c3a61c44178a03fc)
+++ b/app/src/main/res/layout/activity_main.xml	(date 1700881464843)
@@ -11,10 +11,16 @@
         android:layout_width="match_parent"
         android:layout_height="match_parent">
 
+        <include
+            android:id="@+id/main_page"
+            layout="@layout/app_bar_layout">
+        </include>
+
         <FrameLayout
             android:id="@+id/main_container"
             android:layout_width="match_parent"
-            android:layout_height="match_parent">
+            android:layout_height="match_parent"
+            android:layout_below="@id/main_page">
 
             <androidx.recyclerview.widget.RecyclerView
                 android:id="@+id/all_users_post_list"
@@ -30,7 +36,7 @@
             android:layout_alignParentEnd="true"
             android:layout_marginRight="12dp"
             android:layout_marginBottom="4dp"
-            android:background="@color/blue"
+            android:background="@color/purple"
             android:baselineAlignBottom="false"
             android:focusableInTouchMode="false"
             android:scaleType="centerCrop"
Index: app/build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/build.gradle.kts b/app/build.gradle.kts
--- a/app/build.gradle.kts	(revision d8af1b14a154a478b0a009e6c3a61c44178a03fc)
+++ b/app/build.gradle.kts	(date 1700885695663)
@@ -43,7 +43,10 @@
     implementation("com.google.android.gms:play-services-auth:20.7.0")
     implementation("com.google.firebase:firebase-database:20.3.0")
     implementation("com.google.firebase:firebase-storage:20.3.0")
+    implementation ("com.firebaseui:firebase-ui-database:8.0.2")
     implementation ("de.hdodenhof:circleimageview:3.1.0")
+    implementation ("com.squareup.picasso:picasso:2.8")
+    implementation ("com.theartofdev.edmodo:android-image-cropper:2.8.0")
     testImplementation("junit:junit:4.13.2")
     androidTestImplementation("androidx.test.ext:junit:1.1.5")
     androidTestImplementation("androidx.test.espresso:espresso-core:3.5.1")
Index: build.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/build.gradle.kts b/build.gradle.kts
--- a/build.gradle.kts	(revision d8af1b14a154a478b0a009e6c3a61c44178a03fc)
+++ b/build.gradle.kts	(date 1700882831030)
@@ -2,7 +2,13 @@
     dependencies {
         classpath("com.google.gms:google-services:4.4.0")
     }
+    repositories {
+        google()
+        mavenCentral()
+        jcenter()
+    }
 }
+
 // Top-level build file where you can add configuration options common to all sub-projects/modules.
 plugins {
     id("com.android.application") version "8.1.2" apply false
Index: settings.gradle.kts
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/settings.gradle.kts b/settings.gradle.kts
--- a/settings.gradle.kts	(revision d8af1b14a154a478b0a009e6c3a61c44178a03fc)
+++ b/settings.gradle.kts	(date 1700883815047)
@@ -10,6 +10,7 @@
     repositories {
         google()
         mavenCentral()
+        jcenter()//Add this but this will give you deprecated API
     }
 }
 
Index: app/src/main/res/layout/activity_registration.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/res/layout/activity_registration.xml b/app/src/main/res/layout/activity_registration.xml
--- a/app/src/main/res/layout/activity_registration.xml	(revision d8af1b14a154a478b0a009e6c3a61c44178a03fc)
+++ b/app/src/main/res/layout/activity_registration.xml	(date 1700892013855)
@@ -8,45 +8,97 @@
 
     <EditText
         android:id="@+id/emailEditText"
-        android:layout_width="wrap_content"
+        android:layout_width="200dp"
         android:layout_height="wrap_content"
-        android:layout_marginStart="101dp"
-        android:layout_marginTop="410dp"
-        android:layout_marginEnd="101dp"
-        android:layout_marginBottom="10dp"
+        android:layout_marginTop="32dp"
         android:ems="10"
+        android:hint="Email"
         android:inputType="textEmailAddress"
-        app:layout_constraintBottom_toTopOf="@+id/passwordEditText"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toTopOf="parent" />
+        app:layout_constraintTop_toBottomOf="@+id/usernameEditText" />
 
     <EditText
         android:id="@+id/passwordEditText"
-        android:layout_width="wrap_content"
+        android:layout_width="200dp"
         android:layout_height="wrap_content"
-        android:layout_marginStart="101dp"
-        android:layout_marginTop="10dp"
-        android:layout_marginEnd="101dp"
-        android:layout_marginBottom="15dp"
+        android:layout_marginTop="32dp"
         android:ems="10"
+        android:hint="Password"
         android:inputType="textPassword"
-        app:layout_constraintBottom_toTopOf="@+id/signUpButton"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
         app:layout_constraintTop_toBottomOf="@+id/emailEditText" />
 
     <Button
         android:id="@+id/signUpButton"
-        android:layout_width="wrap_content"
-        android:layout_height="wrap_content"
-        android:layout_marginStart="155dp"
-        android:layout_marginTop="10dp"
-        android:layout_marginEnd="155dp"
-        android:layout_marginBottom="150dp"
+        android:layout_width="168dp"
+        android:layout_height="53dp"
+        android:layout_marginTop="28dp"
+        android:text="Register"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/setup_profile_image" />
+
+    <TextView
+        android:id="@+id/textView3"
+        android:layout_width="205dp"
+        android:layout_height="82dp"
+        android:layout_marginTop="28dp"
         android:text="Register"
-        app:layout_constraintBottom_toBottomOf="parent"
+        android:textSize="55sp"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.501"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toTopOf="parent" />
+
+    <EditText
+        android:id="@+id/usernameEditText"
+        android:layout_width="200dp"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="32dp"
+        android:ems="10"
+        android:hint="Username"
+        android:inputType="text"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/lnameEditText" />
+
+    <EditText
+        android:id="@+id/lnameEditText"
+        android:layout_width="200dp"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="32dp"
+        android:ems="10"
+        android:hint="Last Name"
+        android:inputType="text"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintHorizontal_bias="0.492"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/fnameEditText" />
+
+    <EditText
+        android:id="@+id/fnameEditText"
+        android:layout_width="200dp"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="24dp"
+        android:ems="10"
+        android:hint="First Name"
+        android:inputType="text"
         app:layout_constraintEnd_toEndOf="parent"
         app:layout_constraintStart_toStartOf="parent"
-        app:layout_constraintTop_toBottomOf="@+id/passwordEditText" />
+        app:layout_constraintTop_toBottomOf="@+id/textView3" />
+
+    <de.hdodenhof.circleimageview.CircleImageView
+        android:id="@+id/setup_profile_image"
+        android:layout_width="120dp"
+        android:layout_height="127dp"
+        android:layout_marginTop="24dp"
+        android:ems="10"
+        android:src="@drawable/profile_image"
+        app:layout_constraintEnd_toEndOf="parent"
+        app:layout_constraintStart_toStartOf="parent"
+        app:layout_constraintTop_toBottomOf="@+id/passwordEditText">
+
+    </de.hdodenhof.circleimageview.CircleImageView>
 </androidx.constraintlayout.widget.ConstraintLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/sportspot/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/sportspot/MainActivity.java b/app/src/main/java/com/example/sportspot/MainActivity.java
--- a/app/src/main/java/com/example/sportspot/MainActivity.java	(revision d8af1b14a154a478b0a009e6c3a61c44178a03fc)
+++ b/app/src/main/java/com/example/sportspot/MainActivity.java	(date 1700906481244)
@@ -1,87 +1,292 @@
 package com.example.sportspot;
 
-import androidx.annotation.NonNull;
-import androidx.appcompat.app.AppCompatActivity;
-import androidx.drawerlayout.widget.DrawerLayout;
-import androidx.recyclerview.widget.RecyclerView;
-
+import android.content.Context;
+import android.content.Intent;
 import android.os.Bundle;
-import android.content.Intent;
+import android.view.LayoutInflater;
 import android.view.MenuItem;
 import android.view.View;
-import android.widget.Button;
+import android.view.ViewGroup;
 import android.widget.ImageButton;
+import android.widget.ImageView;
+import android.widget.TextView;
 import android.widget.Toast;
 
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.ActionBarDrawerToggle;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.appcompat.widget.Toolbar;
+import androidx.drawerlayout.widget.DrawerLayout;
+import androidx.recyclerview.widget.LinearLayoutManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.firebase.ui.database.FirebaseRecyclerAdapter;
+import com.firebase.ui.database.FirebaseRecyclerOptions;
 import com.google.android.material.navigation.NavigationView;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.auth.FirebaseUser;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+import com.squareup.picasso.Picasso;
+
+import de.hdodenhof.circleimageview.CircleImageView;
 
 public class MainActivity extends AppCompatActivity {
 
     private NavigationView navigationView;
     private DrawerLayout drawerLayout;
+    private ActionBarDrawerToggle actionBarDrawerToggle;
     private RecyclerView postList;
+    private Toolbar mToolbar;
+
+    private CircleImageView NavProfileImage;
+    private TextView NavProfileUserName;
     private ImageButton AddNewPostButton;
 
+    private FirebaseAuth mAuth;
+    private DatabaseReference UsersRef, PostsRef;
+
+    String currentUserID;
     @Override
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         setContentView(R.layout.activity_main);
 
-        //slowly swipe from the left to bring up navigation menu
-        /*
-        navigateToRegisterButton.setOnClickListener(new View.OnClickListener() {
-            @Override
-            public void onClick(View v) {
-                Intent intent = new Intent(MainActivity.this, RegistrationActivity.class);
-                startActivity(intent);
-                
-            }
-        });
-
-        */
-
-        //create objects for functions
-        drawerLayout = (DrawerLayout) findViewById(R.id.drawable_layout);
-        navigationView = (NavigationView) findViewById(R.id.navigation_view);
-        // AddNewPostButton = (ImageButton) findViewById(R.id.add_new_post_button);   for adding posts
-        View navView = navigationView.inflateHeaderView(R.layout.navigation_header);
-
-
+        mAuth = FirebaseAuth.getInstance();
+        FirebaseUser currentUser = mAuth.getCurrentUser();
+
+        if (currentUser != null) {
+            currentUserID = currentUser.getUid();
+
+            // Initialize PostsRef
+            UsersRef = FirebaseDatabase.getInstance().getReference().child("Users");
+            PostsRef = FirebaseDatabase.getInstance().getReference().child("Posts");
+
+            // functions for the action bar submenu
+            mToolbar = findViewById(R.id.main_page);
+            setSupportActionBar(mToolbar);
+            getSupportActionBar().setTitle("Home");
+
+            // new post button function
+            AddNewPostButton = findViewById(R.id.add_new_post_button);
+
+            // functions for the drawer layout
+            drawerLayout = findViewById(R.id.drawable_layout);
+            actionBarDrawerToggle = new ActionBarDrawerToggle(MainActivity.this, drawerLayout, R.string.drawer_open, R.string.drawer_close);
+            drawerLayout.addDrawerListener(actionBarDrawerToggle);
+            actionBarDrawerToggle.syncState();
+            getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+            navigationView = findViewById(R.id.navigation_view);
+
+            postList = findViewById(R.id.all_users_post_list);
+            postList.setHasFixedSize(true);
+            LinearLayoutManager linearLayoutManager = new LinearLayoutManager(this);
+            linearLayoutManager.setReverseLayout(true);
+            linearLayoutManager.setStackFromEnd(true);
+            postList.setLayoutManager(linearLayoutManager);
+
+            View navView = navigationView.inflateHeaderView(R.layout.navigation_header);
+            NavProfileImage = (CircleImageView) navView.findViewById(R.id.nav_profile_image);
+            NavProfileUserName = (TextView) navView.findViewById(R.id.nav_user_full_name);
+
+            UsersRef.child(currentUserID).addValueEventListener(new ValueEventListener() {
+                @Override
+                public void onDataChange(DataSnapshot dataSnapshot) {
+                    if (dataSnapshot.exists()) {
+                        if (dataSnapshot.hasChild("fullname")) {
+                            String fullname = dataSnapshot.child("fullname").getValue().toString();
+                            NavProfileUserName.setText(fullname);
+                        }
+                        if (dataSnapshot.hasChild("profileimage")) {
+                            String image = dataSnapshot.child("profileimage").getValue().toString();
+                            Picasso.get().load(image).placeholder(R.drawable.profile_image).into(NavProfileImage);
+                        } else {
+                            Toast.makeText(MainActivity.this, "Profile name does not exist...", Toast.LENGTH_SHORT).show();
+                        }
+                    }
+                }
+
+                @Override
+                public void onCancelled(DatabaseError databaseError) {
+                    // Handle onCancelled
+                }
+            });
 
-        navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {
-            @Override
-            public boolean onNavigationItemSelected(@NonNull MenuItem item) {
-                // calls UserMenuSelector to select a case when a button from the side menu is clicked
-                //false is a neutral state
-                UserMenuSelector(item);
-                return false;
-            }
-        });
-        /*
-        AddNewPostButton.setOnClickListener(new View.OnClickListener() {   add post button not ready
-            @Override
-            public void onClick(View v) {
-                SendUserToPostActivity();
-            }
-        });
+            navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {
+                @Override
+                public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+                    UserMenuSelector(item);
+                    return false;
+                }
+            });
+
+            AddNewPostButton.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    SendUserToPostActivity();
+                }
+            });
 
-         */
-    }
+            DisplayAllUsersPosts();
+
+        } else {
+            // If currentUser is null, the user is not authenticated
+            SendUserToWelcomePageActivity();
+        }
+    }
+
+    @Override
+    protected void onStart() {
+        super.onStart();
+
+        FirebaseUser currentUser = mAuth.getCurrentUser();
+
+        if (currentUser == null) {
+            SendUserToWelcomePageActivity();
+        } else {
+            CheckUserExistence();
+        }
+    }
+
+    private void CheckUserExistence() {
+        final String current_user_id = mAuth.getCurrentUser().getUid();
+
+        UsersRef.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(DataSnapshot dataSnapshot) {
+                if (!dataSnapshot.hasChild(current_user_id)) {
+                    SendUserToWelcomePageActivity();
+                }
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+                // Handle onCancelled
+            }
+        });
+    }
+
+
+    private void SendUserToSetupActivity() {
+        //changed Registration activity from SetUpActivity
+        Intent setupIntent = new Intent(MainActivity.this, RegistrationActivity.class);
+        setupIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
+        startActivity(setupIntent);
+        finish();
+    }
+
+    private void SendUserToWelcomePageActivity() {
+        Intent loginIntent = new Intent(MainActivity.this, WelcomePageActivity.class);
+        loginIntent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
+        startActivity(loginIntent);
+        finish();
+    }
+
+
+    private void DisplayAllUsersPosts() {
+        FirebaseRecyclerOptions<Posts> options =
+                new FirebaseRecyclerOptions.Builder<Posts>()
+                        .setQuery(PostsRef, Posts.class)
+                        .build();
+
+        FirebaseRecyclerAdapter<Posts, PostsViewHolder> firebaseRecyclerAdapter =
+                new FirebaseRecyclerAdapter<Posts, PostsViewHolder>(options) {
+                    @Override
+                    protected void onBindViewHolder(@NonNull PostsViewHolder holder, int position, @NonNull Posts model) {
+                        holder.setUsername(model.getUsername()); // Fix the method name here
+                        holder.setTime(model.getTime());
+                        holder.setDate(model.getDate());
+                        holder.setDescription(model.getDescription());
+                        holder.setProfileimage(getApplicationContext(), model.getProfileimage());
+                        holder.setPostimage(getApplicationContext(), model.getPostimage());
+                    }
+
+                    @NonNull
+                    @Override
+                    public PostsViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+                        View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.all_posts_layout, parent, false);
+                        return new PostsViewHolder(view);
+                    }
+                };
+
+        postList.setAdapter(firebaseRecyclerAdapter);
+        firebaseRecyclerAdapter.startListening();
+    }
+
+
+    public static class PostsViewHolder extends RecyclerView.ViewHolder{
+
+        View mView;
+
+        public PostsViewHolder(@NonNull View itemView) {
+            super(itemView);
+            mView = itemView;
+        }
+        public void setUsername(String userName)
+        {
+            TextView username = (TextView) mView.findViewById(R.id.post_user_name);
+            username.setText(userName);
+        }
+
+        public void setProfileimage(Context ctx, String profileimage)
+        {
+            CircleImageView image = (CircleImageView) mView.findViewById(R.id.post_profile_image);
+            Picasso.get().load(profileimage).into(image);
+        }
+
+        public void setTime(String time)
+        {
+            TextView PostTime = (TextView) mView.findViewById(R.id.post_time);
+            PostTime.setText("    " + time);
+        }
 
-    /*
+        public void setDate(String date)
+        {
+            TextView PostDate = (TextView) mView.findViewById(R.id.post_date);
+            PostDate.setText("    " + date);
+        }
+
+        public void setDescription(String description)
+        {
+            TextView PostDescription = (TextView) mView.findViewById(R.id.post_description);
+            PostDescription.setText(description);
+        }
+
+        public void setPostimage(Context ctx1,  String postimage)
+        {
+            ImageView PostImage = (ImageView) mView.findViewById(R.id.post_image);
+            Picasso.get().load(postimage).into(PostImage);
+        }
+    }
+
     private void SendUserToPostActivity() {
         Intent addNewPostIntent = new Intent(MainActivity.this, PostActivity.class);
         startActivity(addNewPostIntent);
     }
 
-     */
+    //syncs the actionbar with the item menu
+    @Override
+    public boolean onOptionsItemSelected(MenuItem item)
+    {
+        if(actionBarDrawerToggle.onOptionsItemSelected(item))
+        {
+            return true;
+        }
 
+        return super.onOptionsItemSelected(item);
+    }
+
+    //creates a toast when a box is clicked from the item menu
     private void UserMenuSelector(MenuItem item) {
         int itemId = item.getItemId();
         if (itemId == R.id.nav_profile) {
             Toast.makeText(this, "Profile", Toast.LENGTH_SHORT).show();
         } else if (itemId == R.id.nav_add_new_post) {
-            Toast.makeText(this, "add new post", Toast.LENGTH_SHORT).show();
+            SendUserToPostActivity();
+            //Toast.makeText(this, "add new post", Toast.LENGTH_SHORT).show();
         } else if (itemId == R.id.nav_home) {
             Toast.makeText(this, "Home", Toast.LENGTH_SHORT).show();
         } else if (itemId == R.id.nav_friends) {
@@ -93,7 +298,8 @@
         } else if (itemId == R.id.nav_settings) {
             Toast.makeText(this, "Settings", Toast.LENGTH_SHORT).show();
         } else if (itemId == R.id.nav_logout) {
-            Toast.makeText(this, "Logout", Toast.LENGTH_SHORT).show();
+            mAuth.signOut();
+            SendUserToWelcomePageActivity();
         }
     }
 }
